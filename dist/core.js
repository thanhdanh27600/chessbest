(()=>{"use strict";({776:function(){var e=this&&this.__awaiter||function(e,t,a,n){return new(a||(a=Promise))((function(o,s){function l(e){try{r(n.next(e))}catch(e){s(e)}}function i(e){try{r(n.throw(e))}catch(e){s(e)}}function r(e){var t;e.done?o(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(l,i)}r((n=n.apply(e,t||[])).next())}))};const t=(...e)=>{console.log(...e),(e=>{const t=document.getElementById("logDisplay");t&&(t.value=e,t.dispatchEvent(new Event("input")))})(JSON.stringify(e))};t("chessbest: contentScript run");const a=window,n="shared-2706";let o,s,l;const i=(e=n)=>{o=(e=>`fens/${e}`)(e),s=(e=>`fens/${e}/hint`)(e),l=(e=>`fens/${e}/evaluation`)(e)};i();let r={};const d="Offline",c="Game over. Waiting for new game",u="Waiting for new move",v=e=>{a.dolph.popup.status=e,h()},h=()=>{const e=document.getElementById("statusDisplay");e&&(e.value=a.dolph.popup.status,e.dispatchEvent(new Event("input")))},b=e=>t=>{r&&r.get(r.ref(r.db,`servers/${e}`)).then((e=>{e.exists()&&e.val()&&t()})).catch((e=>{console.error(e)}))},f=()=>{const e=setInterval((()=>{v("Waiting for new game");const n=document.getElementsByTagName("wc-chess-board")[0];if(!n)return void t("chessbest: Not found Board");v("Waiting for board's game");const i=n.game;if(!i)return void t("chessbest: Not found Board Game");v(u),clearInterval(e),a.dolph.game=i,p();const h=e=>{t("chessbest: Writing...",e),r.set(r.ref(r.db,o),{fen:e})};if(!h)return void t("chessbest: Not found writeUserData");h(i.getFEN()),i.on("Move",(({data:e})=>{if(a.dolph.popup.status===d)return;const n=e.move.fen;t("chessbest: curFen Move",n),h(n),a.dolph.beforeFen=n,v("Calculating best move")})),i.on("Load",(({data:e})=>{var n;if(a.dolph.popup.status===d)return;const o=null===(n=e.move)||void 0===n?void 0:n.fen;o&&(t("chessbest: curFen Load",o),h(o)),p()}));const b=setInterval((()=>{i.isGameOver()?v(c):a.dolph.hint?f(a.dolph.hint):t("chessbest: Not found hint")}),50),f=e=>{if(!e)return;const t=e.value,n=e.fen;if(t.length<4)return;if(a.dolph.beforeFen!==n)return;const o=`${t[0]}${t[1]}`,s=`${t[2]}${t[3]}`;i.markings.removeAll(),i.markings.addOne({data:{color:"#96be46",from:o,to:s},type:"arrow"})},g=e=>r.onValue(r.ref(r.db,l),e);g?g((e=>{const n=e.val();t("chessbest: Received evaluation",n),setTimeout(m),n&&(a.dolph.evaluationType=n.evaluationType,a.dolph.evaluationValue=n.evaluationValue)})):t("chessbest: Not found listener evaluation");const y=e=>r.onValue(r.ref(r.db,s),e);y?y((e=>{const n=e.val();t("chessbest: Received hint",n),n&&(a.dolph.hint=n,f(n),i.isGameOver()?v(c):v(u))})):t("chessbest: Not found listener hint"),a.dolph.clearAll=()=>{clearInterval(b),i.markings.removeAll(),r.off(r.ref(r.db,s),"value"),r.off(r.ref(r.db,l),"value"),i.on("Move",(({data:e})=>{})),i.on("Load",(({data:e})=>{})),v(d),t("chessbest: cleared")}}),500)},p=()=>{const e=document.getElementsByTagName("evaluation-bar")[0];e?e.innerHTML='<evaluation-bar board-id="board-single" is-default-fen-automatic="true" data-cy="evaluation-bar"" data-dolph="ok" style="flex: 1 1 auto;">\n      <div class="evaluation-bar-bar undefined ">\n        <span class="evaluation-bar-scoreAbbreviated"></span>\n        <span class="evaluation-bar-score"></span>\n        <div class="evaluation-bar-fill">\n          <div class="evaluation-bar-color evaluation-bar-black"></div>\n          <div class="evaluation-bar-color evaluation-bar-draw"></div>\n          <div class="evaluation-bar-color evaluation-bar-white" style="transform: translate3d(0, 50%, 0)"></div>\n        </div>\n      </div>\n    </evaluation-bar>':t("chessbest: no evaluation board found")},m=()=>{const e=a.dolph.evaluationType,n=a.dolph.evaluationValue,o=document.getElementsByClassName("evaluation-bar-color evaluation-bar-white")[0],s=document.getElementsByClassName("evaluation-bar-scoreAbbreviated")[0];if(!e||!n)return void t("chessbest: no evaluation found");if(!s||!o)return void t("chessbest: no evaluation element found");const l=document.getElementsByClassName("evaluation-bar-score")[0],i=+n;i<0?(s.classList.remove("evaluation-bar-dark"),s.classList.add("evaluation-bar-light"),l.classList.remove("evaluation-bar-dark"),l.classList.add("evaluation-bar-light")):(s.classList.remove("evaluation-bar-light"),s.classList.add("evaluation-bar-dark"),l.classList.remove("evaluation-bar-light"),l.classList.add("evaluation-bar-dark"));const r=i/100,d=i,c=parseFloat(r.toFixed(1));if("cp"===e){s.textContent=c+"",l.textContent=`${r>0?"+":""}${r}`;let e=50-5*r;e<0&&(e=10),e>100&&(e=90),o.style=`transform: translate3d(0, ${e}%, 0)`}"mate"===e&&(s.textContent=`M${Math.abs(d)}`,l.textContent=`M${Math.abs(d)}`,o.style=`transform: translate3d(0, ${d<0?100:0}%, 0)`)};a.dolph.popup={status:d},a.dolph.clearAll=()=>{},(()=>{const t=document.createElement("input");t.id="chessbest-key",t.style.display="none",document.body.appendChild(t),t.addEventListener("input",(function(t){return e(this,void 0,void 0,(function*(){const e=this.value;v(d),a.dolph.clearAll(),b(e)((function(){i(e),f()}))}))}))})(),(()=>{const e=setInterval((()=>{a.dolph&&(r=a.dolph.firebase,r&&(t("chessbest: firebase connected",r),clearInterval(e),b(n)((function(){f(),v("Connected to chess engine")}))))}),500)})()}})[776]()})();