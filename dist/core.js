(()=>{"use strict";({776:function(){var e=this&&this.__awaiter||function(e,t,o,a){return new(o||(o=Promise))((function(n,s){function l(e){try{r(a.next(e))}catch(e){s(e)}}function i(e){try{r(a.throw(e))}catch(e){s(e)}}function r(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(l,i)}r((a=a.apply(e,t||[])).next())}))};console.log("chessbest: contentScript run");const t=window,o="shared-2706";let a,n,s;const l=(e=o)=>{a=(e=>`fens/${e}`)(e),n=(e=>`fens/${e}/hint`)(e),s=(e=>`fens/${e}/evaluation`)(e)};l();let i={};const r="Offline",c="Game over. Waiting for new game",d="Waiting for new move",u=e=>{t.dolph.popup.status=e,v()},v=()=>{const e=document.getElementById("statusDisplay");e&&(e.value=t.dolph.popup.status,e.dispatchEvent(new Event("input")))},h=e=>t=>{i&&i.get(i.ref(i.db,`servers/${e}`)).then((e=>{e.exists()&&e.val()&&t()})).catch((e=>{console.error(e)}))},b=()=>{const e=setInterval((()=>{u("Waiting for new game");const o=document.getElementsByTagName("wc-chess-board")[0];if(!o)return void console.log("chessbest: Not found Board");u("Waiting for board's game");const l=o.game;if(!l)return void console.log("chessbest: Not found Board Game");u(d),clearInterval(e),t.dolph.game=l,f();const v=e=>{console.log("chessbest: Writing...",e),i.set(i.ref(i.db,a),{fen:e})};if(!v)return void console.log("chessbest: Not found writeUserData");v(l.getFEN()),l.on("Move",(({data:e})=>{if(t.dolph.popup.status===r)return;const o=e.move.fen;console.log("chessbest: curFen Move",o),v(o),t.dolph.beforeFen=o,u("Calculating best move")})),l.on("Load",(({data:e})=>{var o;if(t.dolph.popup.status===r)return;const a=null===(o=e.move)||void 0===o?void 0:o.fen;a&&(console.log("chessbest: curFen Load",a),v(a)),f()}));const h=setInterval((()=>{l.isGameOver()?u(c):t.dolph.hint?b(t.dolph.hint):console.log("chessbest: Not found hint")}),50),b=e=>{if(!e)return;const o=e.value,a=e.fen;if(o.length<4)return;if(t.dolph.beforeFen!==a)return void console.log("chessbest:  fen not match");const n=`${o[0]}${o[1]}`,s=`${o[2]}${o[3]}`;l.markings.removeAll(),l.markings.addOne({data:{color:"#96be46",from:n,to:s},type:"arrow"})},m=e=>i.onValue(i.ref(i.db,s),e);m?m((e=>{const o=e.val();console.log("chessbest: Received evaluation",o),setTimeout(p),o&&(t.dolph.evaluationType=o.evaluationType,t.dolph.evaluationValue=o.evaluationValue)})):console.log("chessbest: Not found listener evaluation");const g=e=>i.onValue(i.ref(i.db,n),e);g?g((e=>{const o=e.val();console.log("chessbest: Received hint",o),o&&(t.dolph.hint=o,b(o),l.isGameOver()?u(c):u(d))})):console.log("chessbest: Not found listener hint"),t.dolph.clearAll=()=>{clearInterval(h),l.markings.removeAll(),i.off(i.ref(i.db,n),"value"),i.off(i.ref(i.db,s),"value"),l.on("Move",(({data:e})=>{})),l.on("Load",(({data:e})=>{})),u(r),console.log("chessbest: cleared")}}),500)},f=()=>{const e=document.getElementsByTagName("evaluation-bar")[0];e?e.innerHTML='<evaluation-bar board-id="board-single" is-default-fen-automatic="true" data-cy="evaluation-bar"" data-dolph="ok" style="flex: 1 1 auto;">\n      <div class="evaluation-bar-bar undefined ">\n        <span class="evaluation-bar-scoreAbbreviated"></span>\n        <span class="evaluation-bar-score"></span>\n        <div class="evaluation-bar-fill">\n          <div class="evaluation-bar-color evaluation-bar-black"></div>\n          <div class="evaluation-bar-color evaluation-bar-draw"></div>\n          <div class="evaluation-bar-color evaluation-bar-white" style="transform: translate3d(0, 50%, 0)"></div>\n        </div>\n      </div>\n    </evaluation-bar>':console.log("chessbest: no evaluation board found")},p=()=>{const e=t.dolph.evaluationType,o=t.dolph.evaluationValue,a=document.getElementsByClassName("evaluation-bar-color evaluation-bar-white")[0],n=document.getElementsByClassName("evaluation-bar-scoreAbbreviated")[0];if(!e||!o)return void console.log("chessbest: no evaluation found");if(!n||!a)return void console.log("chessbest: no evaluation element found");const s=document.getElementsByClassName("evaluation-bar-score")[0],l=+o;l<0?(n.classList.remove("evaluation-bar-dark"),n.classList.add("evaluation-bar-light"),s.classList.remove("evaluation-bar-dark"),s.classList.add("evaluation-bar-light")):(n.classList.remove("evaluation-bar-light"),n.classList.add("evaluation-bar-dark"),s.classList.remove("evaluation-bar-light"),s.classList.add("evaluation-bar-dark"));const i=l/100,r=l,c=parseFloat(i.toFixed(1));if("cp"===e){n.textContent=c+"",s.textContent=`${i>0?"+":""}${i}`;let e=50-5*i;e<0&&(e=10),e>100&&(e=90),a.style=`transform: translate3d(0, ${e}%, 0)`}"mate"===e&&(n.textContent=`M${Math.abs(r)}`,s.textContent=`M${Math.abs(r)}`,a.style=`transform: translate3d(0, ${r<0?100:0}%, 0)`)};t.dolph.popup={status:r},t.dolph.clearAll=()=>{},(()=>{const o=document.createElement("input");o.id="chessbest-key",o.style.display="none",document.body.appendChild(o),o.addEventListener("input",(function(o){return e(this,void 0,void 0,(function*(){const e=this.value;u(r),t.dolph.clearAll(),h(e)((function(){l(e),b()}))}))}))})(),(()=>{const e=setInterval((()=>{t.dolph&&(i=t.dolph.firebase,i&&(console.log("chessbest: firebase connected",i),clearInterval(e),h(o)((function(){b(),u("Connected to chess engine")}))))}),500)})()}})[776]()})();